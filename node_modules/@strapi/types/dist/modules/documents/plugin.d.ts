import type * as Plugin from '@strapi/types/src/plugin';
import type * as UID from '@strapi/types/src/uid';
import type * as Public from '@strapi/types/src/public';
import type { Guard, Object, If } from '@strapi/types/src/utils';
export type GetPluginParams<TSchemaUID extends UID.Schema> = Guard.OfTypes<[
    never,
    undefined
], Object.Values<{
    [TPluginName in keyof Public.DocumentServicePluginParams]: Public.DocumentServicePluginParams[TPluginName] extends infer TParam ? If<Plugin.IsEnabled<TPluginName, TSchemaUID>, TParam> : never;
}>>;
//# sourceMappingURL=plugin.d.ts.map